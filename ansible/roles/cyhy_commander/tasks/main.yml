---
# tasks file for cyhy_commander

#
# Copy ssh private key to local temp dir
#
- name: Grab ssh private key from S3 for cyhy user
  local_action:
    module: aws_s3
    bucket: ncats-cyhy-secrets
    object: cyhy_private_id_ed25519
    dest: /tmp/id_ed25519
    mode: get
  become: no

#
# Copy private key to new instance
#
- name: Copy ssh private key for cyhy user
  copy:
    src: /tmp/id_ed25519
    dest: /var/cyhy/.ssh/id_ed25519
    owner: cyhy
    group: cyhy
    mode: 0600

#
# Delete local copy of private key
#
- name: Delete local copy of ssh private key for cyhy user
  local_action:
    module: file
    path: /tmp/id_ed25519
    state: absent
  become: no

#
# Create the cyhy directory in etc for commander conf
#
- name: Create the /etc/cyhy directory
  file:
    path: /etc/cyhy
    state: directory

#
# Copy the cyhy-commander conf file
#
- name: Copy the configuration file for cyhy-commander
  copy:
    src: commander.conf
    dest: /etc/cyhy/commander.conf
    mode: 0644
#
# Create empty cyhy ssh config with cyhy as owner and group
#
- name: Create empty ssh config file
  file:
    path: /var/cyhy/.ssh/config
    state: touch
    owner: cyhy
    group: cyhy

#
# Replace commander.conf password
#
- name: Grab mongo users from S3
  local_action:
    module: aws_s3
    bucket: ncats-cyhy-secrets
    object: mongo_users.yml
    dest: /tmp/mongo_users.yml
    mode: get
  become: no

- name: Load mongo users token from YML file
  local_action:
    module: include_vars
    file: /tmp/mongo_users.yml
    name: mongo_users
  become: no

- name: Configure commander.conf to use commander as mongo user
  lineinfile:
    dest: /etc/cyhy/commander.conf
    regexp: "database-uri ="
    state: present
    line: "database-uri = mongodb://commander:{{ mongo_users.other_users | selectattr('user', 'eq', 'commander') | map(attribute='password') | first }}@database1:27017/cyhy"

- name: Enable and start cyhy-commander
  service:
    name: cyhy-commander
    enabled: yes
    state: restarted

- name: Delete /tmp/mongo_users.yml
  local_action:
    module: file
    path: /tmp/mongo_users.yml
    state: absent
  become: no

#
# Grab the files we need to create the "places" collection from cyhy-core
#
- name: Create the /tmp/cyhy-places/scripts directory
  file:
    path: /tmp/cyhy-places/scripts
    state: directory

- name: Create the /tmp/cyhy-places/extras directory
  file:
    path: /tmp/cyhy-places/extras
    state: directory

- name: Download load_places.sh from GitHub
  get_url:
    url: "https://raw.githubusercontent.com/jsf9k/cyhy-core/develop/var/load_places.sh"
    headers:
      Authorization: "token {{ github_oauth_token }}"
    dest: /tmp/cyhy-places/scripts/load_places.sh
    mode: 0755

- name: Download GNIS_data_import.py from GitHub
  get_url:
    url: "https://raw.githubusercontent.com/jsf9k/cyhy-core/develop/var/GNIS_data_import.py"
    headers:
      Authorization: "token {{ github_oauth_token }}"
    dest: /tmp/cyhy-places/scripts/GNIS_data_import.py
    mode: 0755

- name: Download ADDL_CYHY_PLACES.txt from GitHub
  get_url:
    url: "https://raw.githubusercontent.com/jsf9k/cyhy-core/develop/extras/ADDL_CYHY_PLACES.txt"
    headers:
      Authorization: "token {{ github_oauth_token }}"
    dest: /tmp/cyhy-places/extras/ADDL_CYHY_PLACES.txt

- name: Check if cyhy.conf already exists
  stat:
    path: /etc/cyhy/cyhy.conf
  register: cyhy_conf_result

#
# Set up /etc/cyhy/cyhy.conf with commander creds
#
# This is a little messy.  The real solution is to just create a
# cyhy.conf with credentials for each user in mongo_users.other_users.
# That will cause some heartburn, though, since the credential
# sections will have to be named using the MongoDB username.  That
# will necessitate some changes elsewhere in the code where named
# sections from cyhy.conf are explicitly referenced.
- name: Create cyhy.conf (with commander credentials) if it doesn't exist
  copy:
    dest: /etc/cyhy/cyhy.conf
    owner: cyhy
    group: cyhy
    mode: 0660
    content: |
      [DEFAULT]
      default-section = production
      database-uri = mongodb://localhost:27017/
      report-key =

      ; BEGIN ANSIBLE MANAGED BLOCK commander
      [production]
      database-uri = mongodb://commander:{{ mongo_users.other_users | selectattr("user", "eq", "commander") | map(attribute="password") | first }}@database1:27017/cyhy
      database-name = cyhy
      ; END ANSIBLE MANAGED BLOCK commander
  when: cyhy_conf_result.stat.exists == False

- name: Add commander credentials block to cyhy.conf if necessary
  blockinfile:
    path: /etc/cyhy/cyhy.conf
    marker: '; {mark} ANSIBLE MANAGED BLOCK commander'
    block: |
      [production]
      database-uri = mongodb://commander:{{ mongo_users.other_users | selectattr("user", "eq", "commander") | map(attribute="password") | first }}@database1:27017/cyhy
      database-name = cyhy
  when: cyhy_conf_result.stat.exists == True

#
# Run script to create the "places" collection
#
# Note that we have to turn on pipelining, as described here:
# https://docs.ansible.com/ansible/latest/user_guide/become.html#becoming-an-unprivileged-user
#
- name: Load data to places collection as the cyhy user
  shell: /tmp/cyhy-places/scripts/load_places.sh
  become_user: cyhy
  vars:
    ansible_ssh_pipelining: yes

#
# Cleanup
#
- name: Delete /tmp/cyhy-places
  file:
    path: /tmp/cyhy-places
    state: absent

#
# Run cyhy-nvdsync daily at 0815 (UTC) as cyhy user
#
- name: Set up nightly cron job to sync NVD data
  cron:
    name: Nightly cyhy-nvdsync
    hour: 08
    minute: 15
    user: cyhy
    job: /usr/local/bin/cyhy-nvdsync --use-network 2>&1 | /usr/bin/logger -t cyhy-nvdsync
